openapi: 3.1.0
info:
  title: star-api
  description: API Reference for student's knowledge base
  license:
    name: MIT
    url: 'https://mit-license.org/'
  contact:
    name: Daniil
    url: 'https://t.me/dadyarri'
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
components:
  schemas: {}
  securitySchemes:
    APIKey:
      name: API Key
      type: apiKey
      in: header
tags:
  - name: content
    description: 'Methodical materials, links, etc'
  - name: persons
    description: 'Authorization information, useful contacts, etc'
  - name: events
    description: Notification system
  - name: tests
    description: Knowledge checking system
paths:
  /inviteCode:
    post:
      summary: Generate invite code
      tags:
        - persons
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/InviteCode.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: post-inviteCode
      description: Generates new invite code and returns it
      security:
        - APIKey: []
      parameters:
        - schema:
            type: string
          in: header
          name: X-Authorization
          description: Auth token
    delete:
      summary: Invalidate invite code
      tags:
        - persons
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/InviteCode.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: delete-inviteCode
      description: Invalidates invite code
      security:
        - APIKey: []
      parameters:
        - schema:
            type: string
          in: header
          name: X-Authorization
          description: Auth Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/InvalidateCodeBody.yaml
        description: ''
  '/events/{group}':
    get:
      summary: Get events
      tags:
        - events
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Event.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: get-event
      description: Get events of group
      security:
        - APIKey: []
      parameters:
        - schema:
            type: string
          in: header
          name: X-Authorization
          description: Auth token
    post:
      summary: Create event
      tags:
        - events
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/Event.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: post-event
      description: create event
      security:
        - APIKey: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                priority:
                  $ref: ../models/EventPriority.yaml
                eventText:
                  type: string
                eventDescription:
                  type: string
                eventDate:
                  type: integer
        description: ''
    parameters:
      - schema:
          type: string
        name: group
        in: path
        required: true
        description: group id
  '/pages/{subject}':
    post:
      summary: Create new page
      tags:
        - content
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/Page.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: post-pages
      description: Create new pages and return it
      security:
        - APIKey: []
      parameters:
        - schema:
            type: string
          in: header
          name: X-Authorization
          description: Auth Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                attachments:
                  type: array
                  items:
                    $ref: ../models/Attachment.yaml
                link:
                  type: string
    get:
      summary: Get pages by subject
      tags:
        - content
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Subject.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: get-pages
      description: Get list of pages by subject
      security:
        - APIKey: []
      parameters:
        - schema:
            type: string
          in: header
          name: X-Authorization
          description: Auth Token
    parameters:
      - schema:
          type: string
        name: subject
        in: path
        required: true
        description: Subject id
