openapi: 3.0.3
info:
  title: star-api
  description: API Reference for student's knowledge base
  license:
    name: MIT
    url: 'https://mit-license.org/'
  contact:
    name: Daniil
    url: 'https://t.me/dadyarri'
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
components:
  schemas: {}
  securitySchemes:
    Authorization:
      name: Authorization
      type: apiKey
      in: header
tags:
  - name: content
    description: 'Methodical materials, links, etc'
  - name: persons
    description: 'Authorization information, useful contacts, etc'
  - name: events
    description: Notification system
  - name: tests
    description: Knowledge checking system
paths:
  /inviteCode:
    post:
      summary: Generate invite code
      tags:
        - persons
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/InviteCode.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: post-inviteCode
      description: Generates new invite code and returns it
      parameters: []
  '/events/{group}':
    get:
      summary: Get events
      tags:
        - events
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Event.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: get-event
      description: Get events of group
      parameters: []
    post:
      summary: Create event
      tags:
        - events
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/Event.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: post-event
      description: create event
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                priority:
                  $ref: ../models/EventPriority.yaml
                eventText:
                  type: string
                eventDescription:
                  type: string
                eventDate:
                  type: integer
                  example: 1647156461
        description: ''
    parameters:
      - schema:
          type: string
        name: group
        in: path
        required: true
        description: group id
  '/pages/{subject}':
    post:
      summary: Create new page
      tags:
        - content
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/Page.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: post-pages
      description: Create new pages and return it
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                attachments:
                  type: array
                  items:
                    $ref: ../models/Attachment.yaml
                link:
                  type: string
    get:
      summary: Get pages by subject
      tags:
        - content
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Page.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: get-pages
      description: Get list of pages by subject
      parameters: []
    parameters:
      - schema:
          type: string
        name: subject
        in: path
        required: true
        description: Subject id
  /eventPriorities:
    get:
      summary: get list of priorities
      tags:
        - events
      description: gets list of available priorities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/EventPriority.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: get-eventPriorities
      parameters: []
  '/event/{id}':
    get:
      summary: Get event by its id
      description: gets exact event by its id
      tags:
        - events
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Event.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: get
      parameters: []
    delete:
      summary: Delete event by its id
      description: deletes exact event by its id
      tags:
        - events
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: delete
      parameters: []
    patch:
      summary: Update event by its id
      description: updates exact event by its id
      tags:
        - events
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Event.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: patch
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                eventPriority:
                  type: string
                eventText:
                  type: string
                eventDescription:
                  type: string
                eventDate:
                  type: integer
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: uuid of event
  /quizzes:
    get:
      summary: Get list of quizzes
      description: gets list of created quizzes in exact group
      tags:
        - tests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Quiz.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: get-quizzes
      parameters: []
    post:
      summary: Create new quiz
      description: creates new quiz for the exact group
      tags:
        - tests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Quiz.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: post-quizzes
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subjectId:
                  type: string
        description: ''
  '/softwares/{subjectId}':
    post:
      summary: Create new software link in a subject by its ID
      tags:
        - content
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Software.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: post-software
      description: Create new software link in a subject by its ID
      security:
        - Authorization: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: string
              required:
                - link
    parameters:
      - schema:
          type: string
        name: subjectId
        in: path
        required: true
        description: ID of subject
    get:
      summary: Get list of created softwares in the subject
      operationId: get-softwares
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Gets list of created softwares in the exact subject by its ID
      tags:
        - content
  '/attachments/{subjectId}':
    post:
      summary: Create new attachment in the subject
      tags:
        - content
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Attachment.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: post-new-attachment
      parameters: []
      description: 'Create new attachment in the exact subject by its ID '
    parameters:
      - schema:
          type: string
        name: subjectId
        in: path
        required: true
        description: ID of subject
    get:
      summary: Get all attachments in subject
      operationId: get-attachments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Attachment.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      description: Get all attachments in subject by its ID
      tags:
        - content
  '/employees/{specialtyId}':
    post:
      summary: Create new employee
      tags:
        - content
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Employee.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: post-new-employee
      description: Creates new employee
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                patronym:
                  type: string
                position:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                link:
                  type: string
              required:
                - firstName
                - lastName
                - position
    parameters:
      - schema:
          type: string
        name: specialtyId
        in: path
        required: true
        description: ID of specialty
    get:
      summary: Get all employees in a specialty
      operationId: get-employees
      responses:
        '200':
          description: OK
      description: Get all employees in a specialty
      tags:
        - content
  '/quiz/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id of quiz
    get:
      summary: Get exact quiz
      tags:
        - tests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Quiz.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: get-quiz-id
      description: Get exact quiz
    delete:
      summary: Delete quiz
      tags:
        - tests
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: delete-quiz-id
      description: Delete quiz
    patch:
      summary: Update quiz
      tags:
        - tests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Quiz.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: patch-quiz-id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quizName:
                  type: string
                description:
                  type: string
      description: Update quiz
  '/quiz/{id}/questions':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id of quiz
    get:
      summary: Get a list of questions in the quiz
      tags:
        - tests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Question.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: get-quiz-id-questions
      description: ' Get a list of questions in the quiz '
    post:
      summary: Create new question
      tags:
        - tests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Question.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: post-quiz-id-questions
      description: Create new question
  '/question/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id of question
    patch:
      summary: Change question
      tags:
        - tests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Question.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: patch-quiz-quiz_id-question-question_id
      description: Change question
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                questionText:
                  type: string
          application/xml:
            schema:
              type: object
              properties:
                quizText:
                  type: string
    delete:
      summary: Delete question
      tags:
        - tests
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: delete-quiz-quiz_id-question-question_id
      description: Delete question
    get:
      summary: Get exact question
      tags:
        - tests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Question.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: get-quiz-quiz_id-question-question_id
      description: Get exact question
  '/trash/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id of deleted content
    get:
      summary: Get information about deleted content
      tags:
        - content
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  deletedContent:
                    anyOf:
                      - $ref: ../models/Attachment.yaml
                      - $ref: ../models/Page.yaml
                      - $ref: ../models/Software.yaml
                      - $ref: ../models/Quiz.yaml
                      - $ref: ../models/Question.yaml
                      - $ref: ../models/QuizVariant.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: get-trasch-id
      description: Get information about deleted content
    delete:
      summary: Restore content from trash
      tags:
        - content
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: delete-trash-id
      description: Restore content from trash
  /trash:
    post:
      summary: Delete element to trash
      tags:
        - content
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/Trash.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: post-trash
      description: Deletes element to trash
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                elementId:
                  type: string
  /whoami:
    get:
      summary: Gets username of current user
      tags:
        - persons
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        '401':
          description: Unauthorized
      operationId: get-whoami
      description: Gets username of current user
  '/inviteCode/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: Invalidate an invite code
      tags:
        - persons
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/Error.yaml
      operationId: delete-inviteCode-id
      description: Invalidates invite code by its ID
security:
  - Authorization: []
